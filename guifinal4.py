# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'guifinal.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import serial
from time import sleep
import cv2, imutils
from threading import Thread
import numpy as np
from pyfirmata import ArduinoMega, SERVO

# board = ArduinoMega('/dev/cu.usbmodem101')
# pin = 10
# board.digital[pin].mode = SERVO

global ser,fthruster1,fthruster2,lthruster,rthruster,dthruster1,dthruster2,claw
fthruster1 = 1500
fthruster2 = 1500
lthruster = 1500
rthruster = 1500
dthruster1 = 1500
dthruster2 = 1500
claw = 100
ser = serial.Serial('/dev/cu.usbmodem1101', baudrate=9600, timeout=1,
                    parity=serial.PARITY_NONE,
                    stopbits=serial.STOPBITS_ONE,
                    bytesize=serial.EIGHTBITS
                    )

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1470, 920)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        # self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        # self.gridLayout.setObjectName("gridLayout")
        # self.horizontalLayout = QtWidgets.QHBoxLayout()
        # self.horizontalLayout.setObjectName("horizontalLayout")
        # self.label = QtWidgets.QLabel(self.centralwidget)
        # self.label.setText("")
        # self.label.setPixmap(QtGui.QPixmap("images/H.png"))
        # self.label.setObjectName("label")
        # self.horizontalLayout.addWidget(self.label)
        # self.brightslider = QtWidgets.QSlider(self.centralwidget)
        # self.brightslider.setGeometry(QtCore.QRect(20, 100, 22, 261))
        # self.brightslider.setOrientation(QtCore.Qt.Vertical)
        # self.brightslider.setObjectName("brightslider")
        # self.gridLayout.addWidget(self.brightslider, 0, 0, 1, 1)
        # self.label_2 = QtWidgets.QLabel(self.centralwidget)
        # self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_2.setObjectName("label_2")
        # self.gridLayout.addWidget(self.label_2, 1, 0, 1, 1)
        # self.label_3 = QtWidgets.QLabel(self.centralwidget)
        # self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_3.setObjectName("label_3")
        # self.gridLayout.addWidget(self.label_3, 1, 1, 1, 1)
        # self.horizontalLayout.addLayout(self.gridLayout)
        # self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        # self.pushButton.setObjectName("pushButton")
        # self.horizontalLayout.addWidget(self.pushButton)
        # self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        # self.pushButton_2.setObjectName("pushButton_2")
        # self.horizontalLayout.addWidget(self.pushButton_2)
        # self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        # self.pushButton_3.setObjectName("pushButton_3")
        # self.horizontalLayout.addWidget(self.pushButton_3)
        # spacerItem = QtWidgets.QSpacerItem(313, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        # self.gridLayout.addItem(spacerItem, 1, 1, 1, 1)


        self.startbutton = QtWidgets.QPushButton(self.centralwidget)
        self.startbutton.setGeometry(QtCore.QRect(130, 500, 151, 51))
        self.startbutton.setObjectName("startbutton")
        self.stopbutton = QtWidgets.QPushButton(self.centralwidget)
        self.stopbutton.setGeometry(QtCore.QRect(380, 500, 171, 51))
        self.stopbutton.setObjectName("stopbutton")
        self.gripperslider = QtWidgets.QSlider(self.centralwidget)
        self.gripperslider.setGeometry(QtCore.QRect(1070, 110, 281, 91))
        self.gripperslider.setOrientation(QtCore.Qt.Horizontal)
        self.gripperslider.setObjectName("gripperslider")
        self.gripperslider.setMinimum(100)
        self.gripperslider.setMaximum(145)
        self.gripperslider.setValue(110)
        self.gripperslider.valueChanged.connect(self.gripperslidercontrol)
        self.gripperslider.valueChanged.connect(self.update_gripperspinbox)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(1160, 190, 101, 31))
        self.label.setObjectName("label")
        
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 380, 71, 16))
        self.label_2.setObjectName("label_2")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(1050, 170, 25, 16))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(1350, 160, 31, 31))
        self.label_5.setObjectName("label_5")
        self.surgeslider = QtWidgets.QSlider(self.centralwidget)
        self.surgeslider.setGeometry(QtCore.QRect(1080, 300, 22, 160))
        self.surgeslider.setOrientation(QtCore.Qt.Vertical)
        self.surgeslider.setObjectName("surgeslider")
        self.surgeslider.setMinimum(1300)
        self.surgeslider.setMaximum(1700)
        self.surgeslider.setValue(1500)
        self.surgeslider.setTickInterval(10)
        self.surgeslider.setSingleStep(10)
        self.surgeslider.setPageStep(10)
        self.surgeslider.valueChanged.connect(self.surgeslidercontrol)
        self.surgeslider.valueChanged.connect(self.update_surgespinbox)
        self.yawslider = QtWidgets.QSlider(self.centralwidget)
        self.yawslider.setGeometry(QtCore.QRect(1230, 290, 22, 160))
        self.yawslider.setOrientation(QtCore.Qt.Vertical)
        self.yawslider.setObjectName("yawslider")
        self.yawslider.setMinimum(1300)
        self.yawslider.setMaximum(1700)
        self.yawslider.setValue(1500)
        self.yawslider.setSingleStep(10)
        self.yawslider.valueChanged.connect(self.yawslidercontrol)
        self.yawslider.valueChanged.connect(self.update_yawspinbox)
        self.swayslider = QtWidgets.QSlider(self.centralwidget)
        self.swayslider.setGeometry(QtCore.QRect(1360, 290, 22, 160))
        self.swayslider.setOrientation(QtCore.Qt.Vertical)
        self.swayslider.setObjectName("swayslider")
        self.swayslider.setMinimum(1300)
        self.swayslider.setMaximum(1700)
        self.swayslider.setValue(1500)
        self.swayslider.setSingleStep(10)
        self.swayslider.valueChanged.connect(self.swayslidercontrol)
        self.swayslider.valueChanged.connect(self.update_swayspinbox)
        self.heaveslider = QtWidgets.QSlider(self.centralwidget)
        self.heaveslider.setGeometry(QtCore.QRect(20, 100, 22, 261))
        self.heaveslider.setOrientation(QtCore.Qt.Vertical)
        self.heaveslider.setObjectName("heaveslider")
        self.heaveslider.setMinimum(1300)
        self.heaveslider.setMaximum(1700)
        self.heaveslider.setValue(1500)
        self.heaveslider.setSingleStep(10)
        self.heaveslider.valueChanged.connect(self.heaveslidercontrol)
        self.heaveslider.valueChanged.connect(self.update_heavespinbox)
        self.heavespinbox = QtWidgets.QSpinBox(self.centralwidget)
        self.heavespinbox.setGeometry(QtCore.QRect(50, 250, 48, 24))
        self.heavespinbox.setObjectName("heavespinbox")
        self.heavespinbox.setMinimum(1300)
        self.heavespinbox.setMaximum(1700)
        self.heavespinbox.setValue(1500)
        self.heavespinbox.setSingleStep(5)
        self.heavespinbox.valueChanged.connect(self.heavespinboxcontrol)
        # self.swayslider.valueChanged.connect(self.update_heavespinbox)
        self.killswitch = QtWidgets.QPushButton(self.centralwidget)
        self.killswitch.setGeometry(QtCore.QRect(660, 500, 151, 51))
        self.killswitch.setObjectName("killswitch")
        self.killswitch.clicked.connect(self.killswitchcontrol)
        self.gripperspinbox = QtWidgets.QSpinBox(self.centralwidget)
        self.gripperspinbox.setGeometry(QtCore.QRect(1170, 80, 48, 24))
        self.gripperspinbox.setObjectName("gripperspinbox")
        self.gripperspinbox.setMinimum(90)
        self.gripperspinbox.setMaximum(135)
        self.gripperspinbox.setValue(100)
        self.gripperspinbox.setSingleStep(5)
        self.gripperspinbox.valueChanged.connect(self.gripperspinboxcontrol)
        self.surgespinbox = QtWidgets.QSpinBox(self.centralwidget)
        self.surgespinbox.setGeometry(QtCore.QRect(1070, 500, 48, 24))
        self.surgespinbox.setObjectName("surgespinbox")
        self.surgespinbox.setMinimum(1300)
        self.surgespinbox.setMaximum(1700)
        self.surgespinbox.setValue(1500)
        self.surgespinbox.setSingleStep(10)
        self.surgespinbox.valueChanged.connect(self.surgespinboxcontrol)
        self.yawspinbox = QtWidgets.QSpinBox(self.centralwidget)
        self.yawspinbox.setGeometry(QtCore.QRect(1220, 500, 48, 24))
        self.yawspinbox.setObjectName("yawspinbox")
        self.yawspinbox.setMinimum(1300)
        self.yawspinbox.setMaximum(1700)
        self.yawspinbox.setValue(1500)
        self.yawspinbox.setSingleStep(10)
        self.yawspinbox.valueChanged.connect(self.yawspinboxcontrol)
        self.swayspinbox = QtWidgets.QSpinBox(self.centralwidget)
        self.swayspinbox.setGeometry(QtCore.QRect(1350, 500, 48, 24))
        self.swayspinbox.setObjectName("swayspinbox")
        self.swayspinbox.setMinimum(1300)
        self.swayspinbox.setMaximum(1700)
        self.swayspinbox.setValue(1500)
        self.swayspinbox.setSingleStep(10)
        self.swayspinbox.valueChanged.connect(self.swayspinboxcontrol)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(1070, 560, 60, 16))
        self.label_3.setObjectName("label_3")
        self.label_12 = QtWidgets.QLabel(self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(1220, 560, 60, 16))
        self.label_12.setObjectName("label_12")
        self.label_13 = QtWidgets.QLabel(self.centralwidget)
        self.label_13.setGeometry(QtCore.QRect(1350, 560, 60, 16))
        self.label_13.setObjectName("label_13")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1470, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        # self.th = {}
        # self.pushButton_2.clicked.connect(self.run_threads)
        # self.pushButton_3.clicked.connect(self.run_threads)
        # QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # self.brightness_value_now = 0
        # self.started = False




        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        # self.brightslider.valueChanged['int'].connect(self.brightness_value)

    def gripperslidercontrol(self):
        gripval = self.gripperslider.value()
        ser.write((str(fthruster1) + str(fthruster2) + str(lthruster) + str(rthruster) + str(dthruster1) + str(dthruster2) + str(gripval) + '/').encode())
        self.gripperslider.setValue(gripval)
        # for angle in range(0, endAngle):
        #     board.digital[pin].write(angle)

    def gripperspinboxcontrol(self):
        gripval = self.gripperspinbox.value()
        ser.write((str(fthruster1) + str(fthruster2) + str(lthruster) + str(rthruster) + str(dthruster1) + str(dthruster2) + str(gripval) + '/').encode())
        # for angle in range(0, endAngle):
        #     board.digital[pin].write(angle)
    
    def surgeslidercontrol(self):
        
            val = self.surgeslider.value()
            gripval = self.gripperspinbox.value()
            fthruster1 = val
            fthruster2 = val
            ser.write((str(fthruster1) + str(fthruster2) + str(lthruster) + str(rthruster) + str(dthruster1) + str(dthruster2) + str(gripval) + '/').encode())
            self.surgeslider.setValue(val) 

    def surgespinboxcontrol(self):
        val = self.surgespinbox.value()
        gripval= self.gripperspinbox.value()
        fthruster1 = val
        fthruster2 = val
        ser.write((str(fthruster1) + str(fthruster2) + str(lthruster) + str(rthruster) + str(dthruster1) + str(dthruster2) + str(gripval) + '/').encode())

    def yawslidercontrol(self):
        val = self.yawslider.value()
        gripval = self.gripperspinbox.value()
        rthruster = val
        negvalue = val-1500
        lthruster = (1500-negvalue)
        ser.write((str(fthruster1) + str(fthruster2) + str(lthruster) + str(rthruster) + str(dthruster1) + str(dthruster2) + str(gripval) + '/').encode())
        self.yawslider.setValue(val)

    def yawspinboxcontrol(self):
        val = self.yawspinbox.value()
        gripval = self.gripperspinbox.value()
        rthruster = val
        negvalue = val-1500
        lthruster = (1500-negvalue)
        ser.write((str(fthruster1) + str(fthruster2) + str(lthruster) + str(rthruster) + str(dthruster1) + str(dthruster2) + str(gripval) + '/').encode())

    def swayslidercontrol(self):
        val = self.swayslider.value()
        gripval = self.gripperspinbox.value()
        rthruster = val
        lthruster = val
        ser.write((str(fthruster1) + str(fthruster2) + str(lthruster) + str(rthruster) + str(dthruster1) + str(dthruster2) + str(gripval) + '/').encode())
        self.swayslider.setValue(val)

    def swayspinboxcontrol(self):
        val = self.swayspinbox.value()
        gripval = self.gripperspinbox.value()
        rthruster = val
        lthruster = val
        ser.write((str(fthruster1) + str(fthruster2) + str(lthruster) + str(rthruster) + str(dthruster1) + str(dthruster2) + str(gripval) + '/').encode())
        
    def heaveslidercontrol(self):
        val = self.heaveslider.value()
        gripval = self.gripperspinbox.value()
        dthruster1 = val
        dthruster2 = val
        ser.write((str(fthruster1) + str(fthruster2) + str(lthruster) + str(rthruster) + str(dthruster1) + str(dthruster2) + str(gripval) + '/').encode())

    def heavespinboxcontrol(self):
        val = self.heavespinbox.value()
        gripval = self.gripperspinbox.value()
        dthruster1 = val
        dthruster2 = val
        ser.write((str(fthruster1) + str(fthruster2) + str(lthruster) + str(rthruster) + str(dthruster1) + str(dthruster2) + str(gripval) + '/').encode())

    def update_surgespinbox(self):
        val = self.surgeslider.value()
        self.surgespinbox.setValue(val)

    def update_yawspinbox(self):
        val = self.yawslider.value()
        self.yawspinbox.setValue(val)

    def update_swayspinbox(self):
        val = self.swayslider.value()
        self.swayspinbox.setValue(val)

    def update_gripperspinbox(self):
        val = self.gripperslider.value()
        self.gripperspinbox.setValue(val)

    def update_heavespinbox(self):
        val = self.heaveslider.value()
        self.heavespinbox.setValue(val)

    def killswitchcontrol(self):
        pass

    def rthrustercontrol(self):
        pass

    def fthruster1control(self):
        pass

    def dthruster1control(self):
        pass

    def dthruster2control(self):
        pass

    def fthruster2control(self):
        pass

    def lthrustercontrol(self):
        pass

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.startbutton.setText(_translate("MainWindow", "Start"))
        self.stopbutton.setText(_translate("MainWindow", "Stop"))
        self.label.setText(_translate("MainWindow", "      Gripper"))
        self.label_2.setText(_translate("MainWindow", "Bright"))
        self.label_4.setText(_translate("MainWindow", "90"))
        self.label_5.setText(_translate("MainWindow", "135"))
        self.killswitch.setText(_translate("MainWindow", "Kill Switch"))
        self.label_3.setText(_translate("MainWindow", "Surge"))
        self.label_12.setText(_translate("MainWindow", "    Yaw"))
        self.label_13.setText(_translate("MainWindow", "Sway"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
